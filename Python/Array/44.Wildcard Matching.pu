# Solution: using DP (Dynamic Programming)
class Solution(object):
    def isMatch(self, s, p):
        m = len(s)
        n = len(p)

        # create a table filled by all False (size (n+1) * (m+1))
        dp = [[False for _ in range(n+1)] for i in range (m+1)]
        dp[0][0] = True # matched pairs will be set as True

        for j in range(1, n + 1):
            if p[j-1] != "*":
                break
            dp[0][j] = True
        
        # maching
        for i in range(1, m+1):
            for j in range(1, n+1):
                if p[j-1] in {s[i-1], "?"}: # "?" equals single character
                    dp[i][j] = dp[i-1][j-1]
                elif p[j-1] == "*": # "*" equals sequence and empty 
                    dp[i][j] = dp[i-1][j] or dp[i][j-1]

        return dp[-1][-1]   #dp[len(s)][len(p)], tell us whether the entire s matches with entier p
